{
    "summary": {
        "name": "Condition Triggers",
        "large_offset": false
    },
    "data": [
        {
            "name": "CenterView",
            "offset": 10,
            "params": [
                "where"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Center view for current player at location.<br>&emsp;<br>&emsp;    This action creates the specified number of units at the specified Location<br>&emsp;    If a unit is created 'Anywhere', it will appear in the center of the map.<br>&emsp;    This action will not function while the game is paused.<br>&emsp;<br>&emsp;    Keep in mind that when the conditions are successfully met,<br>&emsp;    the unit(s) will be created for each player that owns the trigger.<br>&emsp;    For example, if All Players own a trigger that creates a Terran Marine for<br>&emsp;    Player 1, and the conditions of the trigger are true for four of the<br>&emsp;    players, Player 1 will get 4 Marines."
        },
        {
            "name": "Comment",
            "offset": 47,
            "params": [
                "text"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;text : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Comment: comment.<br>&emsp;<br>&emsp;    If this action exists in a trigger, and is enabled, whatever text is listed<br>&emsp;    in the text field will be displayed in the trigger text.<br>&emsp;    If you disable this action, the normal trigger text will be displayed."
        },
        {
            "name": "CreateUnit",
            "offset": 44,
            "params": [
                "number",
                "unit",
                "where",
                "for_player"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;number : int | EUDVariable | ExprProxy[int | EUDVariable]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;for_player : _Player | Dword | ExprProxy[Player]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Create quantity unit at location for player.<br>&emsp;<br>&emsp;    This action creates the specified number of units at the specified<br>&emsp;    Location. If a unit is created 'Anywhere', it will appear in the center of<br>&emsp;    the map. This action will not function while the game is paused.<br>&emsp;<br>&emsp;    Keep in mind that when the conditions are successfully met,<br>&emsp;    the unit(s) will be created for each player that owns the trigger.<br>&emsp;    For example, if **All Players** own a trigger that creates a Terran Marine<br>&emsp;    for Player 1, and the conditions of the trigger are true for four of the<br>&emsp;    players, Player 1 will get 4 Marines."
        },
        {
            "name": "CreateUnitWithProperties",
            "offset": 11,
            "params": [
                "count",
                "unit",
                "where",
                "player",
                "properties"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : int | EUDVariable | ExprProxy[int | EUDVariable]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;properties : eudplib.core.mapdata.unitprp.UnitProperty | bytes<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Create quantity unit at location for player. Apply properties<br>&emsp;<br>&emsp;    This action works just like Create Unit, except that you can customize<br>&emsp;    the properties of the newly created unit(s)."
        },
        {
            "name": "Defeat",
            "offset": 2,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;End scenario in defeat for current player.<br>&emsp;<br>&emsp;    This will end the scenario in defeat for the affected players.<br>&emsp;    Any other players in the game will continue."
        },
        {
            "name": "DisplayText",
            "offset": 9,
            "params": [
                "text",
                "AlwaysDisplay"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;text : str | Word | bytes | ExprProxy[String]<br>&emsp;AlwaysDisplay : int | EUDVariable | ExprProxy[int | EUDVariable]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Display for current player: text.<br>&emsp;<br>&emsp;    Displays a specific text message to each owner of the condition."
        },
        {
            "name": "Draw",
            "offset": 56,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;End the scenario in a draw for all players.<br>&emsp;<br>&emsp;    This will end the scenario in a draw for the affected players.<br>&emsp;    Any other players in the game will continue."
        },
        {
            "name": "GiveUnits",
            "offset": 48,
            "params": [
                "count",
                "unit",
                "owner",
                "where",
                "new_owner"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;new_owner : _Player | Dword | ExprProxy[Player]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Give quantity units owned by player at location to player.<br>&emsp;<br>&emsp;    This action allows you to transfer units from one player to another."
        },
        {
            "name": "KillUnit",
            "offset": 22,
            "params": [
                "unit",
                "player"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Kill all units for player.<br>&emsp;<br>&emsp;    This action kills all units of a particular type for the player specified.<br>&emsp;    This action has no effect while the game is paused."
        },
        {
            "name": "KillUnitAt",
            "offset": 23,
            "params": [
                "count",
                "unit",
                "where",
                "for_player"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;for_player : _Player | Dword | ExprProxy[Player]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Kill quantity units for player at location.<br>&emsp;<br>&emsp;    Similar to the 'Kill Unit' action, the 'Kill Unit at Location' action gives<br>&emsp;    you the ability to kill a specified number of units of a particular type<br>&emsp;    belonging to a certain player at the specified Location.<br>&emsp;    This action will not function while the game is paused."
        },
        {
            "name": "LeaderBoardComputerPlayers",
            "offset": " ",
            "params": [
                "state"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;state : TrgPropState | Byte | ExprProxy[PropState]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set use of computer players in leaderboard calculations.<br>&emsp;<br>&emsp;    This action allows you to specify whether neutral, rescue and computer<br>&emsp;    controlled players will be included in the leader board calculations.<br>&emsp;    By default, all computer players are included in the tally."
        },
        {
            "name": "LeaderBoardControl",
            "offset": 17,
            "params": [
                "unit",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for most control of unit. Display label: label<br>&emsp;<br>&emsp;    This will display the Leader Board to all players based on who controls<br>&emsp;    the most of a particular unit in the scenario."
        },
        {
            "name": "LeaderBoardControlAt",
            "offset": 18,
            "params": [
                "unit",
                "location",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;location : str | Byte | bytes | ExprProxy[Location]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for most control of units at location.<br>&emsp;<br>&emsp;    Display label: label"
        },
        {
            "name": "LeaderBoardGoalControl",
            "offset": " ",
            "params": [
                "goal",
                "unit",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;goal : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for player closest to control of number of unit.<br>&emsp;<br>&emsp;    Display label: label<br>&emsp;    This will display the Leader Board to all players based on the amount of<br>&emsp;    units controlled on the map that are required to achieve a goal.<br>&emsp;    In this type of leader board, the lower the number the better."
        },
        {
            "name": "LeaderBoardGoalControlAt",
            "offset": " ",
            "params": [
                "goal",
                "unit",
                "location",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;goal : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;location : str | Byte | bytes | ExprProxy[Location]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for player closest to control of number of units at<br>&emsp;    location.<br>&emsp;<br>&emsp;    Display label: label<br>&emsp;    This will display the Leader Board to all players based on the amount of<br>&emsp;    units controlled at a certain Location that are required to achieve a goal.<br>&emsp;    In this type of leader board, the lower the number the better."
        },
        {
            "name": "LeaderBoardGoalKills",
            "offset": " ",
            "params": [
                "goal",
                "unit",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;goal : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for player closest to number kills of unit.<br>&emsp;<br>&emsp;    Display label: label<br>&emsp;    This will display the Leader Board to all players based on who have<br>&emsp;    the most kills required to achieve a goal.<br>&emsp;    In this type of leader board, the lower the number the better."
        },
        {
            "name": "LeaderBoardGoalResources",
            "offset": " ",
            "params": [
                "goal",
                "resource_type",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;goal : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;resource_type : TrgResource | Byte | ExprProxy[Resource]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for player closest to accumulation of number resource.<br>&emsp;<br>&emsp;    Display label: label<br>&emsp;    This will display the Leader Board to all players based on who have<br>&emsp;    the most resources required to achieve a goal.<br>&emsp;    In this type of leader board, the lower the number the better."
        },
        {
            "name": "LeaderBoardGoalScore",
            "offset": " ",
            "params": [
                "goal",
                "ScoreType",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;goal : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;ScoreType : TrgScore | Byte | ExprProxy[_Score]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for player closest to number points.<br>&emsp;<br>&emsp;    Display label: label<br>&emsp;    This will display the Leader Board to all players based on who have the<br>&emsp;    most points required to achieve a goal.<br>&emsp;    In this type of leader board, the lower the number the better."
        },
        {
            "name": "LeaderBoardGreed",
            "offset": " ",
            "params": [
                "goal"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;goal : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Greed Leader Board for player closest to accumulation of number<br>&emsp;    ore and gas.<br>&emsp;<br>&emsp;    This will display the Leader Board to all players based on who is closest<br>&emsp;    to reaching the goal of accumulating the most ore and gas."
        },
        {
            "name": "LeaderBoardKills",
            "offset": 20,
            "params": [
                "unit",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for most kills of unit. Display label: label<br>&emsp;<br>&emsp;    This will display the Leader Board to all players based on who has the most<br>&emsp;    kills in the scenario."
        },
        {
            "name": "LeaderBoardResources",
            "offset": 19,
            "params": [
                "resource_type",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;resource_type : TrgResource | Byte | ExprProxy[Resource]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for accumulation of most resource.<br>&emsp;<br>&emsp;    Display label: label<br>&emsp;    This will display the Leader Board to all players based on who has<br>&emsp;    the most resources."
        },
        {
            "name": "LeaderBoardScore",
            "offset": 21,
            "params": [
                "ScoreType",
                "label"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;ScoreType : TrgScore | Byte | ExprProxy[_Score]<br>&emsp;label : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show Leader Board for most points. Display label: label<br>&emsp;<br>&emsp;    This will display the Leader Board to all players based on who has<br>&emsp;    the most points."
        },
        {
            "name": "MinimapPing",
            "offset": 28,
            "params": [
                "where"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show minimap ping for current player at location.<br>&emsp;<br>&emsp;    This sends out a 'ping' on the mini map at the specified location.<br>&emsp;    This can be used to draw attention to a particular spot or to track a<br>&emsp;    moving location. Note that pressing the spacebar in the game after<br>&emsp;    receiving the ping will not center your screen on the ping Location.<br>&emsp;    Only transmissions allow you to jump to a different location with the<br>&emsp;    spacebar."
        },
        {
            "name": "ModifyUnitEnergy",
            "offset": 50,
            "params": [
                "count",
                "unit",
                "owner",
                "where",
                "percent"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;percent : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set energy points for quantity units owned by player at location to<br>&emsp;    percent%.<br>&emsp;<br>&emsp;    This action will modify the specified unit(s) spell-casting energy. The<br>&emsp;    energy will be changed based on the percentage specified in the action<br>&emsp;    trigger."
        },
        {
            "name": "ModifyUnitHangarCount",
            "offset": 53,
            "params": [
                "add",
                "count",
                "unit",
                "owner",
                "where"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;add : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Add at most quantity to hangar for quantity units at location owned by<br>&emsp;    player.<br>&emsp;<br>&emsp;    This action will modify the contents of a unit(s) hangar.<br>&emsp;    For example, this will allow you to add 5 additional Interceptors to the<br>&emsp;    Carrier's hangar."
        },
        {
            "name": "ModifyUnitHitPoints",
            "offset": 49,
            "params": [
                "count",
                "unit",
                "owner",
                "where",
                "percent"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;percent : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set hit points for quantity units owned by player at location to<br>&emsp;    percent%.<br>&emsp;<br>&emsp;    This action will modify the specified unit(s) hit points. The hit points<br>&emsp;    will be changed based on the percentage specified in the action trigger."
        },
        {
            "name": "ModifyUnitResourceAmount",
            "offset": 52,
            "params": [
                "count",
                "owner",
                "where",
                "new_value"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;new_value : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set resource amount for quantity resource sources owned by player at<br>&emsp;    location to quantity.<br>&emsp;<br>&emsp;    This action allows you to modify the amount of resources contained in the<br>&emsp;    various mineral stores. For example, you could modify a Vespene Geyser<br>&emsp;    so that it had 0 resources if you desire."
        },
        {
            "name": "ModifyUnitShields",
            "offset": 51,
            "params": [
                "count",
                "unit",
                "owner",
                "where",
                "percent"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;percent : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set shield points for quantity units owned by player at location to<br>&emsp;    percent%.<br>&emsp;<br>&emsp;    This action will modify the specified unit(s) shield points.<br>&emsp;    The shield points will be changed based on the percentage specified in the<br>&emsp;    action trigger."
        },
        {
            "name": "MoveLocation",
            "offset": 38,
            "params": [
                "location",
                "on_unit",
                "owner",
                "dest_location"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;location : str | Byte | bytes | ExprProxy[Location]<br>&emsp;on_unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;dest_location : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Center location labeled location on units owned by player at location.<br>&emsp;<br>&emsp;    This action will center a Location on a unit.<br>&emsp;    In addition to choosing a location to move, you must specify a search<br>&emsp;    location. The Action will ignore any units outside the search location.<br>&emsp;    If no unit is found, the Location will move to the center of the search<br>&emsp;    location. You can combine this Action with Center View to center the screen<br>&emsp;    on a particular unit."
        },
        {
            "name": "MoveUnit",
            "offset": 39,
            "params": [
                "count",
                "unit_type",
                "owner",
                "start_location",
                "dest_location"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit_type : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;start_location : str | Byte | bytes | ExprProxy[Location]<br>&emsp;dest_location : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Move quantity units for player at location to destination.<br>&emsp;<br>&emsp;    This action will teleport a specified number of units (or unit) from one<br>&emsp;    Location to another."
        },
        {
            "name": "MuteUnitSpeech",
            "offset": 30,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Mute all non-trigger unit sounds for current player.<br>&emsp;<br>&emsp;    This action will mute unit speech and set to half-volume all sound effects<br>&emsp;    that the game normally produces, including music and combat sounds.<br>&emsp;    This is particularly useful when you are playing a Transmission Action<br>&emsp;    or any time you want to make sure a triggered sound is heard clearly."
        },
        {
            "name": "Order",
            "offset": 46,
            "params": [
                "unit",
                "owner",
                "start_location",
                "order_type",
                "dest_location"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;start_location : str | Byte | bytes | ExprProxy[Location]<br>&emsp;order_type : TrgOrder | Byte | ExprProxy[_Order]<br>&emsp;dest_location : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Issue order to all units owned by player at location: order to<br>&emsp;    destination.<br>&emsp;<br>&emsp;    This action allows you to issue orders through a trigger to a unit<br>&emsp;    (or units) that will change their behavior in a scenario.<br>&emsp;    The different orders are attack, move and patrol."
        },
        {
            "name": "PauseGame",
            "offset": 5,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Pause the game.<br>&emsp;<br>&emsp;    This action will put the game in a pause state.<br>&emsp;    If a matching Unpause Game is not found, the program automatically unpauses<br>&emsp;    the game when the current trigger is finished. Note that pause game has no<br>&emsp;    effect in multiplayer scenarios or against computer controlled players."
        },
        {
            "name": "PauseTimer",
            "offset": 54,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Pause the game.<br>&emsp;<br>&emsp;    This action will put the game in a pause state.<br>&emsp;    If a matching Unpause Game is not found, the program automatically unpauses<br>&emsp;    the game when the current trigger is finished. Note that pause game has<br>&emsp;    no effect in multiplayer scenarios or against computer controlled players."
        },
        {
            "name": "PlayWAV",
            "offset": 8,
            "params": [
                "sound_name"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;sound_name : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Play WAV file.<br>&emsp;<br>&emsp;    This will play a WAV file for the trigger's owner."
        },
        {
            "name": "PreserveTrigger",
            "offset": 3,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Preserve Trigger.<br>&emsp;<br>&emsp;    Normally, a trigger will only run once for each owner.<br>&emsp;    Triggers automatically disable themselves once they run through all of<br>&emsp;    their actions, unless the Preserve Trigger action is present.<br>&emsp;    If you want a trigger to remain in effect throughout the scenario,<br>&emsp;    add the Preserve Trigger action to its action list."
        },
        {
            "name": "RemoveUnit",
            "offset": 24,
            "params": [
                "unit",
                "player"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Remove all units for player.<br>&emsp;<br>&emsp;    Remove Unit works just like Kill Unit, except that the affected units will<br>&emsp;    simply disappear without actually dying.<br>&emsp;    This action has no effect while the game is paused."
        },
        {
            "name": "RemoveUnitAt",
            "offset": 25,
            "params": [
                "count",
                "unit",
                "where",
                "for_player"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;count : TrgCount | Byte | ExprProxy[Count]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;for_player : _Player | Dword | ExprProxy[Player]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Remove all units for player.<br>&emsp;<br>&emsp;    This action works just like Remove Unit.<br>&emsp;    In addition, you may specify a location and a quantity of units that the<br>&emsp;    action will affect. It has no effect on a paused game."
        },
        {
            "name": "RunAIScript",
            "offset": 15,
            "params": [
                "script"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;script : (\n    DefaultAIScriptWithoutLocation\n    | str\n    | bytes\n    | Dword\n    | ExprProxy[AIScriptWithoutLocation]\n)<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Execute AI script script.<br>&emsp;<br>&emsp;    This instructs the specified computer-controlled players to use a certain<br>&emsp;    AI script. The AI script determines the overall aggressiveness and<br>&emsp;    effectiveness of the computer player, and by changing the AI script during<br>&emsp;    the scenario, you can effectively handicap the scenario."
        },
        {
            "name": "RunAIScriptAt",
            "offset": 16,
            "params": [
                "script",
                "where"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;script : typing.Union[typing.Literal['Terran Custom Level', 'Zerg Custom Level', 'Protoss Custom Level', 'Terran Expansion Custom Level', 'Zerg Expansion Custom Level', 'Protoss Expansion Custom Level', 'Terran Campaign Easy', 'Terran Campaign Medium', 'Terran Campaign Difficult', 'Terran Campaign Insane', 'Terran Campaign Area Town', 'Zerg Campaign Easy', 'Zerg Campaign Medium', 'Zerg Campaign Difficult', 'Zerg Campaign Insane', 'Zerg Campaign Area Town', 'Protoss Campaign Easy', 'Protoss Campaign Medium', 'Protoss Campaign Difficult', 'Protoss Campaign Insane', 'Protoss Campaign Area Town', 'Expansion Terran Campaign Easy', 'Expansion Terran Campaign Medium', 'Expansion Terran Campaign Difficult', 'Expansion Terran Campaign Insane', 'Expansion Terran Campaign Area Town', 'Expansion Zerg Campaign Easy', 'Expansion Zerg Campaign Medium', 'Expansion Zerg Campaign Difficult', 'Expansion Zerg Campaign Insane', 'Expansion Zerg Campaign Area Town', 'Expansion Protoss Campaign Easy', 'Expansion Protoss Campaign Medium', 'Expansion Protoss Campaign Difficult', 'Expansion Protoss Campaign Insane', 'Expansion Protoss Campaign Area Town', 'Move Dark Templars to Region', 'Clear Previous Combat Data', 'Set Player to Enemy', 'Set Player to Ally', 'Value This Area Higher', 'Enter Closest Bunker', 'Set Generic Command Target', 'Make These Units Patrol', 'Enter Transport', 'Exit Transport', 'AI Nuke Here', 'AI Harass Here', 'Set Unit Order To: Junk Yard Dog', 'Disruption Web Here', 'Recall Here', 'Terran 3 - Zerg Town', 'Terran 5 - Terran Main Town', 'Terran 5 - Terran Harvest Town', 'Terran 6 - Air Attack Zerg', 'Terran 6 - Ground Attack Zerg', 'Terran 6 - Zerg Support Town', 'Terran 7 - Bottom Zerg Town', 'Terran 7 - Right Zerg Town', 'Terran 7 - Middle Zerg Town', 'Terran 8 - Confederate Town', 'Terran 9 - Light Attack', 'Terran 9 - Heavy Attack', 'Terran 10 - Confederate Towns', 'Terran 11 - Zerg Town', 'Terran 11 - Lower Protoss Town', 'Terran 11 - Upper Protoss Town', 'Terran 12 - Nuke Town', 'Terran 12 - Phoenix Town', 'Terran 12 - Tank Town', 'Terran 1 - Electronic Distribution', 'Terran 2 - Electronic Distribution', 'Terran 3 - Electronic Distribution', 'Terran 1 - Shareware', 'Terran 2 - Shareware', 'Terran 3 - Shareware', 'Terran 4 - Shareware', 'Terran 5 - Shareware', 'Zerg 1 - Terran Town', 'Zerg 2 - Protoss Town', 'Zerg 3 - Terran Town', 'Zerg 4 - Right Terran Town', 'Zerg 4 - Lower Terran Town', 'Zerg 6 - Protoss Town', 'Zerg 7 - Air Town', 'Zerg 7 - Ground Town', 'Zerg 7 - Support Town', 'Zerg 8 - Scout Town', 'Zerg 8 - Templar Town', 'Zerg 9 - Teal Protoss', 'Zerg 9 - Left Yellow Protoss', 'Zerg 9 - Right Yellow Protoss', 'Zerg 9 - Left Orange Protoss', 'Zerg 9 - Right Orange Protoss', 'Zerg 10 - Left Teal (Attack', 'Zerg 10 - Right Teal (Support', 'Zerg 10 - Left Yellow (Support', 'Zerg 10 - Right Yellow (Attack', 'Zerg 10 - Red Protoss', 'Protoss 1 - Zerg Town', 'Protoss 2 - Zerg Town', 'Protoss 3 - Air Zerg Town', 'Protoss 3 - Ground Zerg Town', 'Protoss 4 - Zerg Town', 'Protoss 5 - Zerg Town Island', 'Protoss 5 - Zerg Town Base', 'Protoss 7 - Left Protoss Town', 'Protoss 7 - Right Protoss Town', 'Protoss 7 - Shrine Protoss', 'Protoss 8 - Left Protoss Town', 'Protoss 8 - Right Protoss Town', 'Protoss 8 - Protoss Defenders', 'Protoss 9 - Ground Zerg', 'Protoss 9 - Air Zerg', 'Protoss 9 - Spell Zerg', 'Protoss 10 - Mini-Towns', 'Protoss 10 - Mini-Town Master', 'Protoss 10 - Overmind Defenders', 'Brood Wars Protoss 1 - Town A', 'Brood Wars Protoss 1 - Town B', 'Brood Wars Protoss 1 - Town C', 'Brood Wars Protoss 1 - Town D', 'Brood Wars Protoss 1 - Town E', 'Brood Wars Protoss 1 - Town F', 'Brood Wars Protoss 2 - Town A', 'Brood Wars Protoss 2 - Town B', 'Brood Wars Protoss 2 - Town C', 'Brood Wars Protoss 2 - Town D', 'Brood Wars Protoss 2 - Town E', 'Brood Wars Protoss 2 - Town F', 'Brood Wars Protoss 3 - Town A', 'Brood Wars Protoss 3 - Town B', 'Brood Wars Protoss 3 - Town C', 'Brood Wars Protoss 3 - Town D', 'Brood Wars Protoss 3 - Town E', 'Brood Wars Protoss 3 - Town F', 'Brood Wars Protoss 4 - Town A', 'Brood Wars Protoss 4 - Town B', 'Brood Wars Protoss 4 - Town C', 'Brood Wars Protoss 4 - Town D', 'Brood Wars Protoss 4 - Town E', 'Brood Wars Protoss 4 - Town F', 'Brood Wars Protoss 5 - Town A', 'Brood Wars Protoss 5 - Town B', 'Brood Wars Protoss 5 - Town C', 'Brood Wars Protoss 5 - Town D', 'Brood Wars Protoss 5 - Town E', 'Brood Wars Protoss 5 - Town F', 'Brood Wars Protoss 6 - Town A', 'Brood Wars Protoss 6 - Town B', 'Brood Wars Protoss 6 - Town C', 'Brood Wars Protoss 6 - Town D', 'Brood Wars Protoss 6 - Town E', 'Brood Wars Protoss 6 - Town F', 'Brood Wars Protoss 7 - Town A', 'Brood Wars Protoss 7 - Town B', 'Brood Wars Protoss 7 - Town C', 'Brood Wars Protoss 7 - Town D', 'Brood Wars Protoss 7 - Town E', 'Brood Wars Protoss 7 - Town F', 'Brood Wars Protoss 8 - Town A', 'Brood Wars Protoss 8 - Town B', 'Brood Wars Protoss 8 - Town C', 'Brood Wars Protoss 8 - Town D', 'Brood Wars Protoss 8 - Town E', 'Brood Wars Protoss 8 - Town F', 'Brood Wars Terran 1 - Town A', 'Brood Wars Terran 1 - Town B', 'Brood Wars Terran 1 - Town C', 'Brood Wars Terran 1 - Town D', 'Brood Wars Terran 1 - Town E', 'Brood Wars Terran 1 - Town F', 'Brood Wars Terran 2 - Town A', 'Brood Wars Terran 2 - Town B', 'Brood Wars Terran 2 - Town C', 'Brood Wars Terran 2 - Town D', 'Brood Wars Terran 2 - Town E', 'Brood Wars Terran 2 - Town F', 'Brood Wars Terran 3 - Town A', 'Brood Wars Terran 3 - Town B', 'Brood Wars Terran 3 - Town C', 'Brood Wars Terran 3 - Town D', 'Brood Wars Terran 3 - Town E', 'Brood Wars Terran 3 - Town F', 'Brood Wars Terran 4 - Town A', 'Brood Wars Terran 4 - Town B', 'Brood Wars Terran 4 - Town C', 'Brood Wars Terran 4 - Town D', 'Brood Wars Terran 4 - Town E', 'Brood Wars Terran 4 - Town F', 'Brood Wars Terran 5 - Town A', 'Brood Wars Terran 5 - Town B', 'Brood Wars Terran 5 - Town C', 'Brood Wars Terran 5 - Town D', 'Brood Wars Terran 5 - Town E', 'Brood Wars Terran 5 - Town F', 'Brood Wars Terran 6 - Town A', 'Brood Wars Terran 6 - Town B', 'Brood Wars Terran 6 - Town C', 'Brood Wars Terran 6 - Town D', 'Brood Wars Terran 6 - Town E', 'Brood Wars Terran 6 - Town F', 'Brood Wars Terran 7 - Town A', 'Brood Wars Terran 7 - Town B', 'Brood Wars Terran 7 - Town C', 'Brood Wars Terran 7 - Town D', 'Brood Wars Terran 7 - Town E', 'Brood Wars Terran 7 - Town F', 'Brood Wars Terran 8 - Town A', 'Brood Wars Terran 8 - Town B', 'Brood Wars Terran 8 - Town C', 'Brood Wars Terran 8 - Town D', 'Brood Wars Terran 8 - Town E', 'Brood Wars Terran 8 - Town F', 'Brood Wars Zerg 1 - Town A', 'Brood Wars Zerg 1 - Town B', 'Brood Wars Zerg 1 - Town C', 'Brood Wars Zerg 1 - Town D', 'Brood Wars Zerg 1 - Town E', 'Brood Wars Zerg 1 - Town F', 'Brood Wars Zerg 2 - Town A', 'Brood Wars Zerg 2 - Town B', 'Brood Wars Zerg 2 - Town C', 'Brood Wars Zerg 2 - Town D', 'Brood Wars Zerg 2 - Town E', 'Brood Wars Zerg 2 - Town F', 'Brood Wars Zerg 3 - Town A', 'Brood Wars Zerg 3 - Town B', 'Brood Wars Zerg 3 - Town C', 'Brood Wars Zerg 3 - Town D', 'Brood Wars Zerg 3 - Town E', 'Brood Wars Zerg 3 - Town F', 'Brood Wars Zerg 4 - Town A', 'Brood Wars Zerg 4 - Town B', 'Brood Wars Zerg 4 - Town C', 'Brood Wars Zerg 4 - Town D', 'Brood Wars Zerg 4 - Town E', 'Brood Wars Zerg 4 - Town F', 'Brood Wars Zerg 5 - Town A', 'Brood Wars Zerg 5 - Town B', 'Brood Wars Zerg 5 - Town C', 'Brood Wars Zerg 5 - Town D', 'Brood Wars Zerg 5 - Town E', 'Brood Wars Zerg 5 - Town F', 'Brood Wars Zerg 6 - Town A', 'Brood Wars Zerg 6 - Town B', 'Brood Wars Zerg 6 - Town C', 'Brood Wars Zerg 6 - Town D', 'Brood Wars Zerg 6 - Town E', 'Brood Wars Zerg 6 - Town F', 'Brood Wars Zerg 7 - Town A', 'Brood Wars Zerg 7 - Town B', 'Brood Wars Zerg 7 - Town C', 'Brood Wars Zerg 7 - Town D', 'Brood Wars Zerg 7 - Town E', 'Brood Wars Zerg 7 - Town F', 'Brood Wars Zerg 8 - Town A', 'Brood Wars Zerg 8 - Town B', 'Brood Wars Zerg 8 - Town C', 'Brood Wars Zerg 8 - Town D', 'Brood Wars Zerg 8 - Town E', 'Brood Wars Zerg 8 - Town F', 'Brood Wars Zerg 9 - Town A', 'Brood Wars Zerg 9 - Town B', 'Brood Wars Zerg 9 - Town C', 'Brood Wars Zerg 9 - Town D', 'Brood Wars Zerg 9 - Town E', 'Brood Wars Zerg 9 - Town F', 'Brood Wars Zerg 10 - Town A', 'Brood Wars Zerg 10 - Town B', 'Brood Wars Zerg 10 - Town C', 'Brood Wars Zerg 10 - Town D', 'Brood Wars Zerg 10 - Town E', 'Brood Wars Zerg 10 - Town F'], str, bytes, ForwardRef('int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]'), eudplib.utils.exprproxy.ExprProxy[ForwardRef('AIScriptAtLocation')]]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Execute AI script script at location.<br>&emsp;<br>&emsp;    Identical to [Run AI Script](#link_action_runaiscript) but specifies<br>&emsp;    a location to run the script at.<br>&emsp;    Certain scripts are designed specifically to target a Location."
        },
        {
            "name": "SetAllianceStatus",
            "offset": 57,
            "params": [
                "player",
                "status"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;status : TrgAllyStatus | Byte | ExprProxy[AllyStatus]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set Player to Ally status.<br>&emsp;<br>&emsp;    This allows you to set the value of the affected players' alliance status."
        },
        {
            "name": "SetCountdownTimer",
            "offset": 14,
            "params": [
                "time_modifier",
                "time"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;time_modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;time : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Modify Countdown Timer: Set duration seconds.<br>&emsp;<br>&emsp;    This allows you to set a countdown timer, in game seconds, which will<br>&emsp;    appear at the top of the game screen and count down automatically.<br>&emsp;    There is one countdown timer shared by all players. Any time the countdown<br>&emsp;    timer is not equal to zero, it is displayed to all players.<br>&emsp;<br>&emsp;    You can also use this action to add or subtract time from the countdown<br>&emsp;    timer."
        },
        {
            "name": "SetDeaths",
            "offset": 45,
            "params": [
                "player",
                "modifier",
                "number",
                "unit"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;number : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Modify death counts for player: Set quantity for unit.<br>&emsp;<br>&emsp;    This will set the death counter of a particular unit, for the specified<br>&emsp;    player, to a value listed in the action."
        },
        {
            "name": "SetDeathsX",
            "offset": " ",
            "params": [
                "player",
                "modifier",
                "number",
                "unit",
                "mask"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;number : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;mask : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION"
        },
        {
            "name": "SetDoodadState",
            "offset": 42,
            "params": [
                "state",
                "unit",
                "owner",
                "where"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;state : TrgPropState | Byte | ExprProxy[PropState]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set doodad state for units for player at location.<br>&emsp;<br>&emsp;    The Installation tileset contains several doodads that can be enabled or<br>&emsp;    disabled. The doors and concealed turrets can be set to start in one state<br>&emsp;    or another by double clicking on them in the main window, but this action<br>&emsp;    allows you to change their state during the course of the scenario. A<br>&emsp;    location must be drawn around the doodads that you wish to affect with this<br>&emsp;    action.<br>&emsp;<br>&emsp;    Enabling a door closes it, and enabling a turret causes it to<br>&emsp;    activate and attack any enemies of the trigger owner."
        },
        {
            "name": "SetInvincibility",
            "offset": 43,
            "params": [
                "state",
                "unit",
                "owner",
                "where"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;state : TrgPropState | Byte | ExprProxy[PropState]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;owner : _Player | Dword | ExprProxy[Player]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set invincibility for units owned by player at location.<br>&emsp;<br>&emsp;    This action makes the specified unit or units Invincible.<br>&emsp;    Invincible units cannot be targeted or attacked, and take no damage."
        },
        {
            "name": "SetKills",
            "offset": " ",
            "params": [
                "player",
                "modifier",
                "number",
                "unit"
            ],
            "return": "See Description",
            "description": "PARAMETERS<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;number : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br><br>RETURN<br>&emsp;eudplib.core.rawtrigger.action.Action | tuple[eudplib.core.rawtrigger.action.Action, eudplib.core.rawtrigger.action.Action, eudplib.core.rawtrigger.action.Action]<br><br>DESCRIPTION"
        },
        {
            "name": "SetMemory",
            "offset": " ",
            "params": [
                "dest",
                "modtype",
                "value"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;dest : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;modtype : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;value : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION"
        },
        {
            "name": "SetMemoryEPD",
            "offset": " ",
            "params": [
                "dest",
                "modtype",
                "value"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;dest : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;modtype : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;value : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION"
        },
        {
            "name": "SetMemoryX",
            "offset": " ",
            "params": [
                "dest",
                "modtype",
                "value",
                "mask"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;dest : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;modtype : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;value : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;mask : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION"
        },
        {
            "name": "SetMemoryXEPD",
            "offset": " ",
            "params": [
                "epd",
                "modtype",
                "value",
                "mask"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;epd : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;modtype : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;value : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;mask : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION"
        },
        {
            "name": "SetMissionObjectives",
            "offset": 12,
            "params": [
                "text"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;text : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set Mission Objectives to: text.<br>&emsp;<br>&emsp;    Changes the mission objectives text to something other than what was<br>&emsp;    defined at the outset of the level. While this doesn't actually change the<br>&emsp;    victory or defeat conditions for the scenario, it can be used to notify<br>&emsp;    the players of changes to the scenario's objectives."
        },
        {
            "name": "SetNextPtr",
            "offset": " ",
            "params": [
                "trg",
                "dest"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;trg : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;dest : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION"
        },
        {
            "name": "SetNextScenario",
            "offset": 41,
            "params": [
                "scenario_name"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;scenario_name : str | Word | bytes | ExprProxy[String]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Load scenario after completion of current game.<br>&emsp;<br>&emsp;    This trigger offers the ability to link multiple user-created maps together<br>&emsp;    to form one large campaign."
        },
        {
            "name": "SetResources",
            "offset": 26,
            "params": [
                "player",
                "modifier",
                "amount",
                "resource_type"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;amount : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;resource_type : TrgResource | Byte | ExprProxy[Resource]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Modify resources for player: Set quantity resource.<br>&emsp;<br>&emsp;    The set resources action allows you to increase, decrease, or set<br>&emsp;    the amount of resources that a player has."
        },
        {
            "name": "SetScore",
            "offset": 27,
            "params": [
                "player",
                "modifier",
                "amount",
                "ScoreType"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;player : _Player | Dword | ExprProxy[Player]<br>&emsp;modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;amount : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;ScoreType : TrgScore | Byte | ExprProxy[_Score]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Modify score for player: Set quantity points.<br>&emsp;<br>&emsp;    The set score action lets you the increase, decrease, or set the number of<br>&emsp;    points that a player currently has."
        },
        {
            "name": "SetSwitch",
            "offset": 13,
            "params": [
                "switch",
                "state"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;switch : str | Byte | bytes | ExprProxy[_Switch]<br>&emsp;state : TrgSwitchAction | Byte | ExprProxy[SwitchAction]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Set switch.<br>&emsp;<br>&emsp;    The set switch action can be used to:<br>&emsp;    - Set a switch to its set position.<br>&emsp;    - Clear a switch to its cleared position.<br>&emsp;    - Toggle a switch: if a switch is cleared, it becomes set;<br>&emsp;                       if it is set, it becomes cleared.<br>&emsp;    - Randomly choose between the set or cleared position."
        },
        {
            "name": "TalkingPortrait",
            "offset": 29,
            "params": [
                "unit",
                "time"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;time : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Show unit talking to current player for duration milliseconds.<br>&emsp;<br>&emsp;    This will show the unit picture of your choice in the unit window in the<br>&emsp;    game screen for the specified amount of time."
        },
        {
            "name": "Transmission",
            "offset": 7,
            "params": [
                "unit",
                "where",
                "sound_name",
                "time_modifier",
                "time",
                "text",
                "AlwaysDisplay"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;unit : DefaultUnit | TrgUnit | Word | ExprProxy[Unit]<br>&emsp;where : str | Byte | bytes | ExprProxy[Location]<br>&emsp;sound_name : str | Word | bytes | ExprProxy[String]<br>&emsp;time_modifier : TrgModifier | Byte | ExprProxy[Modifier]<br>&emsp;time : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br>&emsp;text : str | Word | bytes | ExprProxy[String]<br>&emsp;AlwaysDisplay : int | EUDVariable | ExprProxy[int | EUDVariable]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Send transmission to current player from unit at location.<br>&emsp;<br>&emsp;    A transmission is a combination of several different actions.<br>&emsp;    First, you need to specify which unit at a location you want to send the<br>&emsp;    transmission. This unit's portrait will be displayed for the duration of<br>&emsp;    the transmission.<br>&emsp;    You then need to select a WAV file to play, how long to animate the unit<br>&emsp;    portrait, and what text message to display. The player receiving<br>&emsp;    the transmission will receive a minimap ping when the transmission starts,<br>&emsp;    and can press the space bar to center their screen on the unit sending the<br>&emsp;    transmission.<br>&emsp;<br>&emsp;    Note that this action has no effect on computer players,<br>&emsp;    and it will prevent any other action (in the same trigger) from resuming<br>&emsp;    until it has finished."
        },
        {
            "name": "UnMuteUnitSpeech",
            "offset": 31,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Unmute all non-trigger unit sounds for current player.<br>&emsp;<br>&emsp;    This action sets the sound effects for the game back to their original<br>&emsp;    state."
        },
        {
            "name": "UnpauseGame",
            "offset": 6,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Unpause the game.<br>&emsp;<br>&emsp;    This action resumes the game from a paused session.<br>&emsp;    Note that this has no effect in multiplayer maps and will not effect any<br>&emsp;    computer opponents in single player maps."
        },
        {
            "name": "UnpauseTimer",
            "offset": 55,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Unpause the countdown timer.<br>&emsp;<br>&emsp;    This action will resume the timer from a paused session."
        },
        {
            "name": "Victory",
            "offset": 1,
            "params": [],
            "return": "Action",
            "description": "PARAMETERS<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;End scenario in victory for current player.<br>&emsp;<br>&emsp;    The game ends in victory for the trigger's owner.<br>&emsp;    Any players who are not executing a victory action are defeated."
        },
        {
            "name": "Wait",
            "offset": 4,
            "params": [
                "time"
            ],
            "return": "Action",
            "description": "PARAMETERS<br>&emsp;time : int | EUDVariable | ConstExpr | ExprProxy[int | EUDVariable | ConstExpr]<br><br>RETURN<br>&emsp;Action<br><br>DESCRIPTION<br>&emsp;Wait for duration milliseconds.<br>&emsp;<br>&emsp;    The wait action is used to delay other actions for the specified number of<br>&emsp;    milliseconds. Because it is a blocking action, no other actions in the same<br>&emsp;    trigger and no other blocking actions in other triggers will activate<br>&emsp;    until it is done."
        }
    ]
}